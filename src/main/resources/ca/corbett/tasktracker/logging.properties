# This file controls the logging behaviour of the application.
# 
# If this file exists in the install directory and also in your user
# settings directory (e.g. ~/.TaskTracker/logging.properties),
# then the one in your user settings dir will take precedence.
# So, you can either modify this file to change settings globally,
# or copy it to your user settings directory and modify it per-user.


# Default logging level for all loggers unless otherwise specified:
.level=INFO


# "handlers" is a comma separated list of log handler classes to use.
# So, you can specify logging to both the console and also to a file:
# handlers=java.util.logging.ConsoleHandler, java.util.logging.FileHandler
#
# By default, let's just log to console:
handlers=java.util.logging.ConsoleHandler,java.util.logging.FileHandler,ca.corbett.extras.logging.LogConsoleHandler


# The above handlers can be customized.
#
# For example, you can set the ConsoleHandler to only show SEVERE:
# java.util.logging.ConsoleHandler.level=SEVERE


# FORMATTING LOG OUTPUT
#
# You can use the SimpleFormatter by itself with no customization for default formatting:
# java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
#
# Or, you can customize the SimpleFormatter with the following arguments:
#  timestamp: "%1$tc" (last digit is the time/date specifier as per "man date")
#  caller (classname usually): "%2$s"
#  log level (WARN, SEVERE, INFO, etc): "%4$s"
#  log message: "%5$s"
#  stack trace (if available): "%6$s"
#
# For example, to print a single line per log msg with the log level, message, and timestamp: 
# java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n
#
# Or, to print a custom date format and message, with log level and message on another line:
# java.util.logging.SimpleFormatter.format=[%1$tF %1$tr] %2$s%n%4$s - %5$s%6$s%n
#
# Let's keep it simple, all on a single line:
java.util.logging.SimpleFormatter.format=%1$tF %1$tr [%4$s] %5$s%6$s%n


# LOGGING TO A FILE
#
# When using a FileHandler, you can choose the log file location (%h = user home dir):
java.util.logging.FileHandler.pattern=%h/.TaskTracker/TaskTracker.log
#
# You can also restrict the size of the log file:
# java.util.logging.FileHandler.limit=5000
#
# TODO what do these do exactly
# java.util.logging.FileHandler.maxLocks=100
# java.util.logging.FileHandler.count=1
#
# The same formatting options as shown in the previous section can also be used here:
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter


# SETTING LOG LEVEL FOR SPECIFIC PACKAGES OR CLASSES
#
# You can override default log level for specific classes or packages!
# ca.corbett.tasktracker.ui.MainWindow.level=FINE
